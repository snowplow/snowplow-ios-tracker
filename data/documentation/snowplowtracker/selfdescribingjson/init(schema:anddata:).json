{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/snowplowtracker\/selfdescribingjson\/init(schema:anddata:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"schema"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"andData"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A valid schema string.","type":"text"}],"type":"paragraph"}],"name":"schema"},{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"Data to set for data field of the self-describing JSON, should be an NSDictionary.","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An SPSelfDescribingJson."}]}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Initializes a newly allocated SPSelfDescribingJson."},{"text":" ","type":"text"},{"text":"NOTE: The data should be serializable to JSON using the JSONSerialization class in Foundation. An exception will be thrown if the data is not serializable. To make sure your data is serializable, you can use the ","type":"text"},{"type":"codeVoice","code":"JSONSerialization.isValidJSONObject"},{"type":"text","text":" function."}],"hierarchy":{"paths":[["doc:\/\/SnowplowTracker\/documentation\/SnowplowTracker","doc:\/\/SnowplowTracker\/documentation\/SnowplowTracker\/SelfDescribingJson"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SnowplowTracker\/documentation\/SnowplowTracker\/SelfDescribingJson\/init(schema:andData:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"schema"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"andData"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"modules":[{"name":"SnowplowTracker"}],"externalID":"c:@M@SnowplowTracker@objc(cs)SPSelfDescribingJson(im)initWithSchema:andData:","symbolKind":"init","role":"symbol","roleHeading":"Initializer","title":"init(schema:andData:)"},"references":{"doc://SnowplowTracker/documentation/SnowplowTracker/SelfDescribingJson/init(schema:andData:)":{"role":"symbol","identifier":"doc:\/\/SnowplowTracker\/documentation\/SnowplowTracker\/SelfDescribingJson\/init(schema:andData:)","title":"init(schema:andData:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"schema"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"andData"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"])","kind":"text"}],"type":"topic","url":"\/documentation\/snowplowtracker\/selfdescribingjson\/init(schema:anddata:)","abstract":[{"type":"text","text":"Initializes a newly allocated SPSelfDescribingJson."},{"text":" ","type":"text"},{"text":"NOTE: The data should be serializable to JSON using the JSONSerialization class in Foundation. An exception will be thrown if the data is not serializable. To make sure your data is serializable, you can use the ","type":"text"},{"code":"JSONSerialization.isValidJSONObject","type":"codeVoice"},{"type":"text","text":" function."}]},"doc://SnowplowTracker/documentation/SnowplowTracker/SelfDescribingJson":{"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/SnowplowTracker\/documentation\/SnowplowTracker\/SelfDescribingJson","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SelfDescribingJson"}],"url":"\/documentation\/snowplowtracker\/selfdescribingjson","title":"SelfDescribingJson","navigatorTitle":[{"text":"SelfDescribingJson","kind":"identifier"}],"kind":"symbol"},"doc://SnowplowTracker/documentation/SnowplowTracker":{"title":"SnowplowTracker","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/SnowplowTracker\/documentation\/SnowplowTracker","url":"\/documentation\/snowplowtracker","abstract":[]}}}