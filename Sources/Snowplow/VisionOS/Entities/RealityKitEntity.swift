//  Copyright (c) 2013-2023 Snowplow Analytics Ltd. All rights reserved.
//
//  This program is licensed to you under the Apache License Version 2.0,
//  and you may not use this file except in compliance with the Apache License
//  Version 2.0. You may obtain a copy of the Apache License Version 2.0 at
//  http://www.apache.org/licenses/LICENSE-2.0.
//
//  Unless required by applicable law or agreed to in writing,
//  software distributed under the Apache License Version 2.0 is distributed on
//  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
//  express or implied. See the Apache License Version 2.0 for the specific
//  language governing permissions and limitations there under.

import Foundation

/**
 Properties for the Snowplow entity that represents a RealityKit Entity.
 Entity schema: `iglu:com.apple.realitykit/entity/jsonschema/1-0-0`
 */
@objc(SPRealityKitEntity)
public class RealityKitEntity: SelfDescribingJson {
    
    /// The stable identity of the entity, as a string.
    @objc
    public var id: String
    
    /// The name of the entity.
    @objc
    public var name: String?
    
    /// The parent entity identity.
    @objc
    public var parentEntityId: String?
    
    /// The identity of the nearest ancestor entity that can act as an anchor.
    @objc
    public var anchorId: String?
    
    /// The stable identity of the scene that owns the entity.
    @objc
    public var sceneId: String?
    
    /// The name of the scene that owns the entity.
    @objc
    public var sceneName: String?
    
    /// Randomly generated ID for the entity. Generated by the tracker if not provided by the user.
    @objc
    public var uuid: UUID
    
    @objc
    override public var data: [String : Any] {
        get {
            var data: [String : Any] = [
                "id": id,
                "uuid": uuid.uuidString
            ]
            if let name = name { data["name"] = name }
            if let parentEntityId = parentEntityId { data["parent_entity_id"] = parentEntityId }
            if let anchorId = anchorId { data["anchor_id"] = anchorId }
            if let sceneId = sceneId { data["scene_id"] = sceneId }
            if let sceneName = sceneName { data["scene_name"] = sceneName }
            return data
        }
        set {}
    }
    
    /// - Parameter id: The stable identity of the entity, as a string.
    /// - Parameter name: The name of the entity.
    /// - Parameter parentEntityID: The parent entity identity.
    /// - Parameter anchorID: The identity of the nearest ancestor entity that can act as an anchor.
    /// - Parameter sceneID: The stable identity of the scene that owns the entity.
    /// - Parameter sceneName: The name of the scene that owns the entity.
    /// - Parameter uuid: Randomly generated ID for the entity. Generated by the tracker if not provided by the user.
    @objc
    public init(
        id: String,
        name: String? = nil,
        parentEntityID: String? = nil,
        anchorID: String? = nil,
        sceneID: String? = nil,
        sceneName: String? = nil,
        uuid: UUID = UUID()
    ) {
        self.id = id
        self.name = name
        self.parentEntityId = parentEntityID
        self.anchorId = anchorID
        self.sceneId = sceneID
        self.sceneName = sceneName
        self.uuid = uuid
        super.init(schema: visionOsRealityKitEntity, andData: [:])
    }
}
